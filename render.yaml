# Render.com deployment configuration
# This file configures your video downloader for Render.com

services:
  - type: web
    name: video-downloader
    env: node
    plan: free  # Change to 'starter' or higher for production
    buildCommand: |
      echo "Installing Node.js dependencies..."
      npm ci --only=production
      echo "Node.js dependencies installed successfully"
    startCommand: npm start
    # Explicitly disable Python builds to avoid conflicts
    buildFilter:
      ignoredPaths:
        - "**/*.py"
        - "**/requirements.txt"
        - "**/pyproject.toml"
        - "**/poetry.lock"
        - "python_deps/**"
        - "setup-replit*.sh"
        - "replit*.nix"
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        fromService:
          type: web
          name: video-downloader
          property: port
      - key: PATH
        value: "$HOME/.local/bin:$PATH"
      - key: RENDER
        value: "true"
    healthCheckPath: /
    autoDeploy: true
    branch: main  # Change to your main branch name
    rootDir: .
    
    # Build settings
    buildFilter:
      paths:
        - "**/*.js"
        - "**/*.json"
        - "**/*.md"
        - "!node_modules/**"
        - "!*.backup"
        - "!.git/**"
    
    # Environment setup for Node.js application only
    preDeployCommand: |
      echo "Setting up Node.js environment for Render.com..."
      echo "Node.js version: $(node --version)"
      echo "NPM version: $(npm --version)"
      echo "Environment: $NODE_ENV"
      echo "Note: This is a Node.js-only deployment. No Python dependencies required."
      echo "yt-dlp will be handled by yt-dlp-exec package."
      echo "âœ… Environment setup completed"
    
    # Disk storage (for temporary files)
    disk:
      name: video-temp
      mountPath: /tmp/videos
      sizeGB: 1